
==================== FINAL INTERFACE ====================
2017-03-30 20:47:35.00140416 UTC

interface scrabble-score-0.0.0-EUGTWR6XQQcBWFNCK8FBmX:Scrabble 8002
  interface hash: bd31f59212714b0d4e94b3600974a22c
  ABI hash: ae928848777de74ac69fd7eb0e16a5f1
  export-list hash: 9b38d506ff7efe51ad23f7346e3b5cdf
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: bf8f5ed9f57c603c45732fbe6e5757d5
  sig of: Nothing
  used TH splices: False
  where
exports:
  Scrabble.scoreLetter
  Scrabble.scoreWord
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Char 01433d23661edb6e5ef1536ef1e6774c
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Unicode a175ecf20bf1272d9ae31337e7da43ab
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 318df275d77dcdb18e0006d8d7870c2a
b095aa52d47321d9a747d12e2cf684ae
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Scrabble.$trModule2
                   Scrabble.$trModule1) -}
52323ca90fe92a5beb81d2e12313bfc3
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Scrabble"#) -}
cb1d5fda9ddd1c0315171d483e534b94
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "scrabble-score-0.0.0-EUGTWR6XQQcBWFNCK8FBmX"#) -}
05e9502ef291285e51e79b5d02758298
  charInString :: GHC.Types.Char -> GHC.Base.String -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U(U)><S,1*U>,
     Unfolding: (\ (c :: GHC.Types.Char) (s :: GHC.Base.String) ->
                 letrec {
                   go :: [GHC.Types.Char] -> GHC.Types.Int -> GHC.Types.Int
                     {- Arity: 2, Strictness: <S,1*U><L,1*U(U)> -}
                   = \ (ds :: [GHC.Types.Char]) (eta :: GHC.Types.Int) ->
                     case ds of wild {
                       [] -> eta
                       : y ys
                       -> case y of wild1 { GHC.Types.C# x ->
                          case c of ww { GHC.Types.C# ww1 ->
                          case {__pkg_ccall base-4.9.1.0 u_towupper GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld,
                                                                          GHC.Prim.Int# #)}
                                 (GHC.Prim.ord# ww1)
                                 GHC.Prim.realWorld# of wild2 { (#,#) ds1 ds2 ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.leWord# (GHC.Prim.int2Word# ds2) 1114111##) of wild3 {
                            GHC.Types.False
                            -> case GHC.Char.chr2 ds2 ret_ty GHC.Types.Int of {}
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.eqChar# x (GHC.Prim.chr# ds2)) of wild4 {
                                 GHC.Types.False -> go ys eta
                                 GHC.Types.True
                                 -> case eta of a1 { GHC.Types.I# ipv ->
                                    go ys (GHC.Types.I# (GHC.Prim.+# ipv 1#)) } } } } } } }
                 } in
                 case go s Scrabble.scoreLetter16 of wild { GHC.Types.I# x ->
                 GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.># x 0#) }) -}
613f96c80ef28b74a1aa1068259c3efb
  scoreLetter :: GHC.Types.Char -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <L,U(U)>,
     Unfolding: (\ (letter :: GHC.Types.Char) ->
                 case Scrabble.charInString letter Scrabble.scoreLetter15 of wild {
                   GHC.Types.False
                   -> case Scrabble.charInString
                             letter
                             Scrabble.scoreLetter14 of wild1 {
                        GHC.Types.False
                        -> case Scrabble.charInString
                                  letter
                                  Scrabble.scoreLetter13 of wild2 {
                             GHC.Types.False
                             -> case Scrabble.charInString
                                       letter
                                       Scrabble.scoreLetter12 of wild3 {
                                  GHC.Types.False
                                  -> case Scrabble.charInString
                                            letter
                                            Scrabble.scoreLetter11 of wild4 {
                                       GHC.Types.False
                                       -> case Scrabble.charInString
                                                 letter
                                                 Scrabble.scoreLetter10 of wild5 {
                                            GHC.Types.False
                                            -> case Scrabble.charInString
                                                      letter
                                                      Scrabble.scoreLetter9 of wild6 {
                                                 GHC.Types.False -> Scrabble.scoreLetter8
                                                 GHC.Types.True -> Scrabble.scoreLetter7 }
                                            GHC.Types.True -> Scrabble.scoreLetter6 }
                                       GHC.Types.True -> Scrabble.scoreLetter5 }
                                  GHC.Types.True -> Scrabble.scoreLetter4 }
                             GHC.Types.True -> Scrabble.scoreLetter3 }
                        GHC.Types.True -> Scrabble.scoreLetter2 }
                   GHC.Types.True -> Scrabble.scoreLetter1 }) -}
b674cdbf0547e7443acf9460ea0652cb
  scoreLetter1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
175a0b8c9f43564e380ec8f35a38e4a9
  scoreLetter10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "JX"#) -}
42cb38e0c71b3fc88e7db19d3f96dd6e
  scoreLetter11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "K"#) -}
997194d7759e690bfe091f6878769a11
  scoreLetter12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FHVWY"#) -}
96d52b91d78de567caf288c72cd32646
  scoreLetter13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "BCMP"#) -}
b26387837bbde304adbfe0dc56a081b0
  scoreLetter14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DG"#) -}
a720cf66b4738d56fda85cb46e4bdfc0
  scoreLetter15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AEIOULNRST"#) -}
7bfe0fad6ec0e5f9c793f1d2bb1e728c
  scoreLetter16 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0#) -}
4687f2595324020e03b596b2c15991d2
  scoreLetter2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
39d18e0a13fc4bc65b64213a1c74daf9
  scoreLetter3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
8f596f973b6aee98aea3799c4d8f8608
  scoreLetter4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (4) -}
8406247ed4fb83069d565279b06297ea
  scoreLetter5 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (5) -}
33280578109befaa8e26a33fc4574e25
  scoreLetter6 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (8) -}
3e5260f84c0f7be7ae741432bc9830da
  scoreLetter7 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (10) -}
ac16a979b3587cf1769bd57cb6338298
  scoreLetter8 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
dd0d328b53cd8045a2c199ae3b555246
  scoreLetter9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "QZ"#) -}
187b5b2598e247bd7aaab11e809c6a91
  scoreWord :: GHC.Base.String -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (word :: GHC.Base.String) ->
                 Scrabble.scoreWord_go word Scrabble.scoreLetter8) -}
c1ca51978485e79d6ae933ce4d2449cb
  scoreWord_go ::
    [GHC.Types.Char]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

